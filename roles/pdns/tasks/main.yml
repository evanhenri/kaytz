---
- name: Copy pdns directories
  file:
    mode: "{{ item.mode }}"
    path: "{{ home }}/pdns/{{ item.path }}"
    state: directory
  with_filetree: "{{ role_path }}/files"
  when: item.state == 'directory'

- name: Copy templated pdns files
  template:
    src: "{{ item.src }}"
    dest: "{{ home }}/pdns/{{ item.path }}"
  with_filetree: "{{ role_path }}/files"
  when: item.state == 'file'
  no_log: True

- name: Build and run pdns docker containers
  docker_service:
    build: yes
    project_src: "{{ home }}/pdns"
  become: true

- name: Give containers 5 seconds to start
  pause:
    seconds: 5

# todo: need better way to detect if zone.conf has been loaded
# as `list-all-zones` currently includes all verbose logging output
- name: Detect dns zones
  command: docker-compose exec -T nameserver pdnsutil list-all-zones
  args:
    chdir: "{{ home }}/pdns"
  register: zones_output
  become: true

- name: Import tsig keys
  shell: docker-compose exec -T nameserver pdnsutil {{ item }} || true
  with_items:
    - "import-tsig-key ddns-tsig-key.{{ domain }} hmac-sha512 {{ kea_ddns_key }}"
  args:
    chdir: "{{ home }}/pdns"
  no_log: True
  become: true

# todo: restrict who can send dns update requests
# this fails if set to ddns_cidr (127.0.0.1) even though that's the address ddns server is bound to
- name: Setup forward zone
  command: docker-compose exec -T nameserver pdnsutil {{ item }}
  with_items:
    - "load-zone {{ domain }} /zone.conf"
    - "set-meta {{ domain }} ALLOW-DNSUPDATE-FROM {{ ddns_cidr }}"
    - "set-meta {{ domain }} TSIG-ALLOW-DNSUPDATE ddns-tsig-key.{{ domain }}"
  args:
    chdir: "{{ home }}/pdns"
  when: domain + '.' not in zones_output.stdout_lines
  become: true

- name: Setup reverse zone
  command: docker-compose exec -T nameserver pdnsutil {{ item }}
  with_items:
    - "load-zone {{ k8s_ptr_record }} /reverse_zone.conf"
    - "set-meta {{ k8s_ptr_record }} ALLOW-DNSUPDATE-FROM {{ ddns_cidr }}"
    - "set-meta {{ k8s_ptr_record }} TSIG-ALLOW-DNSUPDATE ddns-tsig-key.{{ domain }}"
  args:
    chdir: "{{ home }}/pdns"
  when: k8s_ptr_record + '.' not in zones_output.stdout_lines
  become: true

- name: Finalize zones
  command: docker-compose exec -T nameserver pdnsutil {{ item }}
  with_items:
    - rectify-all-zones
    - check-all-zones
  args:
    chdir: "{{ home }}/pdns"
  become: true
