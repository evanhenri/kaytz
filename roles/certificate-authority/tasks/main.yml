---
# https://github.com/kelseyhightower/kubernetes-the-hard-way/blob/master/docs/02-certificate-authority.md

- name: Download cfssl binary
  get_url:
    url: "https://pkg.cfssl.org/R1.2/cfssl_linux-amd64"
    dest: "/usr/local/bin/cfssl"
    mode: 0755
  become: true

- name: Download cfssljson binary
  get_url:
    url: "https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64"
    dest: "/usr/local/bin/cfssljson"
    mode: 0755
  become: true

- name: Create cfssl directory
  file:
    mode: 0755
    path: "{{ home }}/cfssl"
    state: directory

- name: Copy templated cfssl files
  template:
    src: "{{ item.src }}"
    dest: "{{ home }}/cfssl/{{ item.path }}"
  with_filetree: "{{ role_path }}/files"
  when: item.state == 'file'

- name: Generate a CA certificate and private key (ca-key.pem, ca.pem)
  shell: cfssl gencert -initca ca-csr.json | cfssljson -bare ca;
  args:
    chdir: "{{ home }}/cfssl"

- name: Generate admin client certificate and private key (admin-key.pem, admin.pem)
  shell: |
    cfssl gencert \
      -ca=ca.pem \
      -ca-key=ca-key.pem \
      -config=ca-config.json \
      -profile=kubernetes \
      admin-csr.json | cfssljson -bare admin
  args:
    chdir: "{{ home }}/cfssl"

- name: Generate kube-proxy client certificate and private key (kube-proxy-key.pem, kube-proxy.pem)
  shell: |
    cfssl gencert \
      -ca=ca.pem \
      -ca-key=ca-key.pem \
      -config=ca-config.json \
      -profile=kubernetes \
      kube-proxy-csr.json | cfssljson -bare kube-proxy
  args:
    chdir: "{{ home }}/cfssl"

- name: Generate Kubernetes certificate and private key (kubernetes-key.pem, kubernetes.pem)
  shell: |
    cfssl gencert \
      -ca=ca.pem \
      -ca-key=ca-key.pem \
      -config=ca-config.json \
      -profile=kubernetes \
      kubernetes-csr.json | cfssljson -bare kubernetes
  args:
    chdir: "{{ home }}/cfssl"

- name: Copy TLS certificates and keys to Kubernetes worker nodes
  shell: |
    for auth_file in \
        ca.pem \
        kube-proxy.pem \
        kube-proxy-key.pem; do \
      cp ${auth_file} {{ item.value.home }}/
    done;
  args:
    chdir: "{{ home }}/cfssl"
  with_dict: "{{ worker_nodes }}"
  become: true

- name: Copy TLS certificates and keys to Kubernetes controller nodes
  shell: |
    for auth_file in \
        ca.pem \
        ca-key.pem \
        kubernetes-key.pem \
        kubernetes.pem; do \
      cp ${auth_file} {{ item.value.home }}/
    done;
  args:
    chdir: "{{ home }}/cfssl"
  with_dict: "{{ controller_nodes }}"
  become: true

- name: Assign ownership of files copied to nodes to LXC user
  shell: |
    uid_gid=$(ls -la {{ item.value.home }}/.bashrc | awk '{printf "%d:%d", $3, $4}')
    chown -R ${uid_gid} {{ item.value.home }}/
  with_dict: "{{ nodes }}"
  become: true
