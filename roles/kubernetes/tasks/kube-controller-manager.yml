---
- name: Detect /usr/bin/kube-controller-manager
  stat:
    path: /usr/bin/kube-controller-manager
  register: kube_controller_manager

- name: Define kube_controller_manager_version_resp
  shell: kube-controller-manager --version | awk '{print $2}';
  register: kube_controller_manager_version_resp
  when: kube_controller_manager.stat.exists

- name: Define kube_controller_manager_version
  set_fact:
    kube_controller_manager_version: "{{ kube_controller_manager_version_resp.stdout }}"
  when: kube_controller_manager_version_resp is defined

- name: Download kube-controller-manager binary
  get_url:
    url: "{{ k8s_download_url }}/kube-controller-manager"
    dest: "/usr/bin/kube-controller-manager"
    mode: 0755
    force: yes
  become: true
  when: kube_controller_manager_version is defined and kube_controller_manager_version != k8s_version

- name: Generate systemd unit file
  blockinfile:
    path: /etc/systemd/system/kube-controller-manager.service
    create: yes
    mode: 0777
    block: |
      [Unit]
      Description=Kubernetes Controller Manager
      Documentation=https://github.com/GoogleCloudPlatform/kubernetes

      [Service]
      ExecStart=/usr/bin/kube-controller-manager \
        --address={{ phys_intf_ip }} \
        --allocate-node-cidrs=true \
        --cluster-cidr=10.200.0.0/16 \
        --cluster-name=kubernetes \
        --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem \
        --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem \
        --leader-elect=true \
        --master=http://{{ phys_intf_ip }}:8080 \
        --port=10252 \
        --root-ca-file=/var/lib/kubernetes/ca.pem \
        --service-account-private-key-file=/var/lib/kubernetes/ca-key.pem \
        --service-cluster-ip-range=10.32.0.0/16 \
        --v=2
      Restart=on-failure
      RestartSec=5

      [Install]
      WantedBy=multi-user.target
  become: true

- name: Update systemd
  include_role:
    name: common
    tasks_from: reload_systemd_service
  vars:
    service_name: kube-controller-manager.service
