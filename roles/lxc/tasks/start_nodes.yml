---
- name: Detect running nodes
  command: lxc-ls --running --line
  register: lxc_running
  become: true
  changed_when: lxc_running.stdout_lines | length > 0

- name: Define nx_dns_nodes
  set_fact:
    nx_dns_nodes: []

- name: Redefine nx_dns_nodes as nodes without cooresponding dns A records
  set_fact:
    nx_dns_nodes: |
      {{ nx_dns_nodes }} + {{
        [] if lookup('dig', item + './A', '@' + phys_intf_ip ) | ipaddr else [item]
      }}
  with_items: "{{ lxc_running.stdout_lines }}"
  changed_when: nx_dns_nodes | length > 0

# fixme: this is a hacky workaround.
# not sure why DHCID records remain when the corresponding A record is no longer present
- name: Delete lingering DHCID dns records
  shell: docker-compose exec -T db psql -c "DELETE FROM records WHERE type='DHCID' AND name NOT IN (SELECT name FROM records WHERE type='A');"
  args:
    chdir: "{{ home }}/pdns"
  register: psql_retval
  changed_when: "'DELETE 0' not in psql_retval.stdout_lines"
  become: true

- name: Stop invalid running nodes
  command: lxc-stop --name={{ item }}
  with_items: "{{ nx_dns_nodes }}"
  become: true
  changed_when: nx_dns_nodes | length > 0

- name: Detect stopped nodes
  command: lxc-ls --stopped --line
  register: lxc_stopped
  become: true
  changed_when: lxc_stopped.stdout_lines | length > 0

- name: Destroy stopped nodes
  command: lxc-destroy --name={{ item }}
  with_items: "{{ lxc_stopped.stdout_lines }}"
  become: true
  changed_when: lxc_stopped.stdout_lines | length > 0

- name: Detect running nodes
  command: lxc-ls --running --line
  register: lxc_running
  become: true
  changed_when: lxc_running.stdout_lines | length > 0

- name: Create nodes that are not already running
  command: |
    lxc-create \
      --template=download \
      --name={{ item.value.fqdn }} \
      -- \
      --dist={{ item.value.dist }} \
      --arch={{ item.value.arch }} \
      --release={{ item.value.release }}
  with_dict: "{{ nodes }}"
  when: item.value.fqdn not in lxc_running.stdout_lines
  become: true

- name: Generate node config files
  copy:
    dest: "/var/lib/lxc/{{ item.value.fqdn }}/config"
    mode: 0644
    content: |
      lxc.include = /usr/share/lxc/config/ubuntu.common.conf
      lxc.include = /usr/share/lxc/config/ubuntu.userns.conf

      lxc.rootfs = /var/lib/lxc/{{ item.value.fqdn }}/rootfs
      lxc.rootfs.backend = dir
      lxc.utsname = {{ item.value.fqdn }}
      lxc.arch = amd64

      lxc.include = /etc/lxc/default.conf
      lxc.network.name = eth0
      lxc.network.veth.pair = {{ item.value.name }}

      # Default to empty ipv4 address as the container will get assigned an ip via dhcp from the kia docker container
      lxc.network.ipv4 = 0.0.0.0/{{ k8s_prefix }} {{ k8s_broadcast }}
      lxc.network.ipv4.gateway = auto
      lxc.start.auto = 1
  with_dict: "{{ nodes }}"
  become: true

- name: Start nodes
  command: lxc-start --name={{ item.value.fqdn }} --daemon
  with_dict: "{{ nodes }}"
  when: item.value.fqdn not in lxc_running.stdout_lines
  become: true
